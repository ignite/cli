package types

func NewMsgCreate<%= TypeName.PascalCase %>(<%= MsgSigner.LowerCamel %> string<%= for (field) in Fields { %>, <%= field.Name.LowerCamel %> <%= field.DataType() %><% } %>) *MsgCreate<%= TypeName.PascalCase %> {
  return &MsgCreate<%= TypeName.PascalCase %>{
		<%= MsgSigner.UpperCamel %>: <%= MsgSigner.LowerCamel %>,<%= for (field) in Fields { %>
    <%= field.Name.UpperCamel %>: <%= field.Name.LowerCamel %>,<% } %>
	}
}

func NewMsgUpdate<%= TypeName.PascalCase %>(<%= MsgSigner.LowerCamel %> string<%= for (field) in Fields { %>, <%= field.Name.LowerCamel %> <%= field.DataType() %><% } %>) *MsgUpdate<%= TypeName.PascalCase %> {
  return &MsgUpdate<%= TypeName.PascalCase %>{
		<%= MsgSigner.UpperCamel %>: <%= MsgSigner.LowerCamel %>,<%= for (field) in Fields { %>
    <%= field.Name.UpperCamel %>: <%= field.Name.LowerCamel %>,<% } %>
	}
}

func NewMsgDelete<%= TypeName.PascalCase %>(<%= MsgSigner.LowerCamel %> string) *MsgDelete<%= TypeName.PascalCase %> {
  return &MsgDelete<%= TypeName.PascalCase %>{
		<%= MsgSigner.UpperCamel %>: <%= MsgSigner.LowerCamel %>,
	}
}