// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	context "context"

	cosmosclient "github.com/ignite/cli/v29/ignite/pkg/cosmosclient"

	mock "github.com/stretchr/testify/mock"
)

// TXsCollector is an autogenerated mock type for the TXsCollector type
type TXsCollector struct {
	mock.Mock
}

type TXsCollector_Expecter struct {
	mock *mock.Mock
}

func (_m *TXsCollector) EXPECT() *TXsCollector_Expecter {
	return &TXsCollector_Expecter{mock: &_m.Mock}
}

// CollectTXs provides a mock function with given fields: ctx, fromHeight, tc
func (_m *TXsCollector) CollectTXs(ctx context.Context, fromHeight int64, tc chan<- []cosmosclient.TX) error {
	ret := _m.Called(ctx, fromHeight, tc)

	if len(ret) == 0 {
		panic("no return value specified for CollectTXs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, chan<- []cosmosclient.TX) error); ok {
		r0 = rf(ctx, fromHeight, tc)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TXsCollector_CollectTXs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CollectTXs'
type TXsCollector_CollectTXs_Call struct {
	*mock.Call
}

// CollectTXs is a helper method to define mock.On call
//   - ctx context.Context
//   - fromHeight int64
//   - tc chan<- []cosmosclient.TX
func (_e *TXsCollector_Expecter) CollectTXs(ctx interface{}, fromHeight interface{}, tc interface{}) *TXsCollector_CollectTXs_Call {
	return &TXsCollector_CollectTXs_Call{Call: _e.mock.On("CollectTXs", ctx, fromHeight, tc)}
}

func (_c *TXsCollector_CollectTXs_Call) Run(run func(ctx context.Context, fromHeight int64, tc chan<- []cosmosclient.TX)) *TXsCollector_CollectTXs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int64), args[2].(chan<- []cosmosclient.TX))
	})
	return _c
}

func (_c *TXsCollector_CollectTXs_Call) Return(_a0 error) *TXsCollector_CollectTXs_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TXsCollector_CollectTXs_Call) RunAndReturn(run func(context.Context, int64, chan<- []cosmosclient.TX) error) *TXsCollector_CollectTXs_Call {
	_c.Call.Return(run)
	return _c
}

// NewTXsCollector creates a new instance of TXsCollector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTXsCollector(t interface {
	mock.TestingT
	Cleanup(func())
}) *TXsCollector {
	mock := &TXsCollector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
